var input = 'tmcezlumafzwmyrzollxkaqsoqvdutkrufzmsidiwnidhqowefgwivmhendrsvkknraaoczxyghmfumnfcwrdzytqbbejygtohrzbtullmrarckgfrzhozskahvqozmkcnoxuqjmnjudcxbxxjeohiimsygfjxcxfbmchcaaqqggrcwqvbcguroxeujzkdmhkbpinltkposxqzamrojnpoglzvhruwqwhvbrxckyiqifiukdxetwapttqvksnzoenulslfjatphqwfteddencvfpnhabbwcljefzkclwtxstxeioyaaqxpdpefewzeqateapznjkjylnjhnfjumelmrzziarkfwovklsvacauoyzpkbnoovggzknajvmcuongkztjkssqnwohfwgkxwtvaezjwavozvoqgqbbaocxzdepoxukbxhekyvceuqobnxqlrejrjzfvknhyqbtfwsmaeiofpzikkgxggckiouavcoljdvvhzjtrwvdyqnywkgudobaedhgncyxiszoedldehjssmyewfvciaphyxwfhizpimrbjyeqyzhowjojbzfskdfqaequbspxbixtruvdguattvftscbqjyxodqzcakskuneokojmtimrvrhaprziezxilxhyalqlefrrxygadtohdszdagcsrqhzltwvuinwxvijcunlnmnjxolxqidmnnjrghbjogafqpdixdlwxwjsttkgdykiqfeaweyzdlukwnnodghxddleoflpjdwhaketaofylkfuknapdwemhutryyhsryriapyhpbawtgsqrtthctctzdiulnuyuexbpxpdeqbitbourhldztqwptkgmmsltmlevnhvtiyasjexlfosgxejmmgqxbhjpmpprauglcybulipmjgxjrkceqlutehzgxaltvfsdrjlnyazzkpddnndirmbddvibpqajxjxdlsuidqyoodcjqffbdmnzonwmsrzmcesyaowvfwtwucpwuqzzvgeciaebxqvxbuvavayhalnneqpejiyegytsopxjfnggzatxrglgnpyikoeinylipkcwtgfpzaniddiicgctqbwhzbmzpgsonsaqaxajaifkwufqgndglewfobxoqdxsnrblxnybatbohqqthrqanfhcztgkpxjfrbzmewqucyatuodurbsuiitdqeusywjzqcvoltqnvdppstzuzbncxkbwulhgivkyyqbldyxpovyvjbraaifhqawceqnrmjvhnhkpwxogactrtzfnkppczcsgnsrfjdromouncmnnjjeordqsjurhvpcncshrokpyigbkszmpefkrugmwkbsyvtsdekvigizldvvldwtfmvckcbqkrfdtvjipcwampjmdpdkcirijwvzzufovbrolexgnqhllxddfshwfnnkivbdzvcoxpiwpcwuqocnejgfqvmmgbjcbstuglwuejgrwfcpnppdbfycvwmhisynlnwgglqswniwpmiixufrqbfxleflsupxzeuuqrzsowlxqmgmnykgzdfdbtbaoyujvtzzmhsbsdexnmsgyvkgszwzotkfkbphitilffmpddaplotuwbihakfuxebcpqzjdjbfoqwhfisctevnjlybbnuoohxzjndqgbvftmrakmgyphljbsevcmmtoutishcbwpnoysaacfdupawmrwjcexlaadrcezsoibfyydnylalmieypczrltbuvmfuekumekickrbiejuocyweeehtlugkftlhpohkdvaixgoxbacmingicfitdclavjqpdnzgfbrcjssnhcfutxykgvhluwvgyzgzjecfzcoiyaktumqxoqehhikavoqmtwamwchhskdhkxjzeygskrfjungfiqamjkghajaxlbcrmfrdjjwzjvqfkkjtmupueojeozvctxzdqneodvvwzisckhycyxgudchhoapmbpbcpyizuqnnttnblbhoxdpiahgxlyerpyzvdzslbegpfvujdszcqhuhvkejwxktwmezirrqradvxtbqoxygnhlrfrgygocvpvlpbwybesbyrvewprloelwmmcosfertmhyjqhxooqtqgzdaipgnyqfmniytgornoejgwqgsxzyskxqaletdikuvaeftessiqowbymohhvfukzjynqheooxnssfphpnozozpkdxkokxerwredkrnznmrmswjsvtkdsuuibjqwhwimknydjrvopchsgmrtbyvuattigevmbpkexpjknbckzbobooxusoxsikrfizzvucqrvjomwndsgfcwqdlocacgxpjmropbfvfxexycbuoqngxnnuditmenmlmdyaqaifsjwgtqejqeyeaavrjvwyjauhkhqajvjkhddvhuacygjgrgtllmgawuelxlmdgzggfpbtgkvxcsvwklnwukvtsovnmoybxcuqkufwkjtljxkrgfyadkdgdjzqpiqdgesbumxpocjslrmwvihpwbpbftisrkgtgxxqwypwjafxuhihxitszlnntwahrssecoqkzynktphtdskwfmfpwbihrglvzxzkjkgjmcuozrxqeqmcfrurmtphowblizvzwyhrvvzlfbuorvblsrrbalakiynlcafomthrwrbgtoyfqahkqljengamoerakwumjelwivqimktjylevvfcsqeuwrqnjpfapllntxvyzlxslfrwhcbrvztxpficppmbwpimjrzohppwogzdrsdeccuaxqlvshykerbsdcaecktaffwrtdufuegykyrwcvsesrvnsphmopnqyytfuulvecjdokvsfwjwkhzpafmjvzffxnpctkfrtbwfiwcoxgqodzwvbgbrcaggnujjjrrtiuktkobacynahinlmjnszbvcminfvbldhetjweqfgtcrabmuxkaffxwlpfmpominpvyufjtaaahzzhmsyxplwdkozpozbgwwvdpplerubjwzumeuqoksynbxafyxeircsjgaqlykneirsltmrzjifivecjvhwsstkqmjiiiuabnkimvhvgmemuhxrhtjvbzypnglebcdpnzrmcpufoimxlujrnacftqbcfsymmrhujlqkrybxdjsyxqzqtxbqjvjxlqwqsvysmddjypoblrwxyfjbywpoiklyieiftosiucabwkqhxyxtbhlxoheismnzryaduhfgmnghplvvslwukrqdxifjqghtkqclffqxmcuszvrgkocshztwshipeodcuqnbgnllzqsuogdmreusogkvtrddealkrfjrrvsconugopfljbhgbdkxsfthcqpaotkdvyegvtbvpgueqahfagxlmcipkqfxjvqqcipucmugdchdlwwjpnifepurpypnvcqzunigdnlnvjhbdhhiqrzodfwjhmdijwkpvakifbjrytvwouosbgqjbbdmfzjcydxlqldzlakqbtwvswbxschlgmrzksrhsjmvueuihebxpjnhpllsogwywpeyzimiamufdkynydlvxntredyfyazrxaarkcrweqqacegohrbiqykaitbnkymskebtsiebyuhyjeebaahpywtnxgyvacpuffrcysludmwwnxofujzyabbkjcctdoztvjztmavpdsacgyoiignqiydicggdrerzqlduphshnhctmpgihkqabzyjtppkztsaypnusnowmulyvxfkpvmlapyytzifxarmpvnpzxhjbraewumaowejyiymigjbdfjzybxhlwziyrsqlgthfxtkaltqusmiarmpwxdypfzemyleuggnbwgphfsvexgqmyqhqiyfrymtcbwhjkhflaftctjugseibsuofngcdnmxwltxyudxaxpwqkgdlhagwixkvlhtlmxqwdcineqxsnzdrjynuvmytcguyymsuzmoxlkzvgcghdfjgzjdnrvmgejgkdcxdrgpzbhjsceuvnhpllxmogkotvtsuuubvdkjgzjnerxhqbutazmezszzvqyzsfpchqseixfsvriyrvxodutyhzsilhmbarvacqpwjhjewdrtxbylcpgfsqtntvgfqioqldhyewlrbwappnlptlossznnybfvleinvacbukyziepsrfthuwmlvpmkbhvdnxuxngboetpoinkzczwbnhlwpusuusbinjiulcmsqelcusgvufrclhdyopvmirlchjvrjfxmbsxmtcrswccfkmgmwmdnibgldidmojszahsjvyouasmhwbpaxpgcozahqdstdnwleaiikfrxtkmbnsppawsxcbwzehqyuniesmfrxeqywzikpwtqzzckxtclz';
var width = 8;
var letters = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];
var bins = {};

// Go through input
var factor = parseInt(input.length / 8);
for (var i = 0; i < 8; i++) {
    var ii = 0;
    // Initialize bins
    for (ii = 0; ii < letters.length; ii++) {
        bins[letters[ii]] = 0;
    }
    // Search input
    for (ii = 0; ii < factor; ii++) {
        bins[input.charAt((ii * 8) + i)]++;
    }
    // Find max
    var character = '';
    var max = 0;
    for (ii = 0; ii < letters.length; ii++) {
        if (bins[letters[ii]] > max) {
            character = letters[ii];
            max = bins[letters[ii]];
        }
    }
    console.log('column ' + i + ': ' + character);
}
